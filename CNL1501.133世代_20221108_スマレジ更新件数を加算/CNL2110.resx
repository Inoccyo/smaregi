<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MainMenu1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 18</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAu
        AgAAAk1TRnQBSQFMAwEBAAEEAQABBAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABIAYAARAaAAMOAf8DDgH/Aw4B/wMOAf8DDgH/Aw4B/wMOAf8DDgH/Aw4B/wMOAf8DDgH/
        1AADDiX/Aw4B/9QAAw4F/wMOAf8DDgX/Aw4F/wMOAf8DDgX/Aw4B/9QAAw4l/wMOAf/UAAMOBf8DDgH/
        Aw4F/wMOAf8DDgX/Aw4F/wMOAf/UAAMOJf8DDgH/1AADDgX/Aw4F/wMOAf8DDgX/Aw4B/wMOBf8DDgH/
        1AADDiX/Aw4B/9QAAw4F/wMOAf8DDgH/Aw4F/wMOBf8DDgX/Aw4B/9QAAw4J/wMOGf8DDgH/1AADDgH/
        Aw4B/wMOBf8DDgH/Aw4F/wMOAf8DDgX/Aw4B/8wAAw4B/wMOAf8DDgn/Aw4Z/wMOAf/MABD/Aw4B/wMO
        Af8DDgH/Aw4B/wMOAf8DDgH/Aw4B/wMOAf8DDgH/zAAc/wMOAf/gAAMOAf8DDg3/Aw4B/wMOAf/sAAMO
        Af8DDgH/Aw4B/+wAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHAAQcGAAHA
        AQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcHAAEH
        BwABBwcAAf8GAAEBAf8GAAHHAf8GAAs=
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCACTAV4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1rOKTjFKQeP6UrYAA
        61RmNJyD3FKB3zk+1KFyCelA560AIRzR1PBOKQ88AilGM8mgAB96QjHJPHvTuD0AzSEA8E8e9ACAbgc8
        D60hBHf60H0GKXH1xQAA4zuNL97/AOtSY+XcBmmkHoOhoAefX+XeggbRx+NMbJUDH50/JNACcggUpGTx
        SHK4wMnuT2pc44JoACM0pUdc0GkyScKB9aAEPtTiodSMcjtScn60hyOOnvQAicAimucH0/WpQoHPelyu
        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
        AetI5K9KKKAP/9k=
</value>
  </data>
</root>